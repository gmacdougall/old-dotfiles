if [ -e ~/.bashrc.completion-git ]; then
	source ~/.bashrc.completion-git
else
	source /etc/bash_completion.d/git
fi
source ~/.bashrc.colors

export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM=verbose

if [ -f ~/.bashrc.local ]; then
	. ~/.bashrc.local
fi

if [ -z "$USER_COLOR" ]
then
	USER_COLOR="$GREEN"
fi

function prompt_func() {
    previous_return_value=$?;
    prompt="${USER_COLOR}\u@\h${LIGHT_BLUE}[${RED}\w${LIGHT_CYAN}$(__git_ps1)${LIGHT_BLUE}]${COLOR_NONE}"
    if test $previous_return_value -eq 0
    then
        PS1="\n${prompt}\n\$ "
    else
        PS1="\n${prompt}${RED}\n\$${COLOR_NONE} "
    fi
}

function rmb {
  current_branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
  if [ "$current_branch" != "master" ]; then
    echo "WARNING: You are on branch $current_branch, NOT master."
  fi
    echo "Fetching merged branches..."
  git remote prune origin
  remote_branches=$(git branch -r --merged | grep -v '/master$' | grep -v "/$current_branch$")
  local_branches=$(git branch --merged | grep -v 'master$' | grep -v "$current_branch$")
  if [ -z "$local_branches" ]; then
    echo "No existing branches have been merged into $current_branch."
  else
    echo "This will remove the following branches:"
    if [ -n "$local_branches" ]; then
      echo "$local_branches"
    fi
    read -p "Continue? (y/n): " -n 1 choice
    echo
    if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
      # Remove local branches
      git branch -d `git branch --merged | grep -v 'master$' | grep -v "$current_branch$" | sed 's/origin\///g' | tr -d '\n'`
    else
      echo "No branches removed."
    fi
  fi
}

PROMPT_COMMAND=prompt_func
